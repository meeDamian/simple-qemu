name: Check master or PR

env:
  APP: simple-qemu

on:
  push:
    branches: [ 'master' ]
  pull_request:
    branches: [ 'master' ]

jobs:
  build:
    name: Build recent qemu versions
    runs-on: ubuntu-18.04

    env:
      DOCKER_BUILDKIT: 1

    steps:
      - uses: actions/checkout@v2

      # NOTE: This is also handled within Dockerfile, we *also* do it here,
      #         because of the step building single-arch images below.
      - name: Extract essence from built-architectures.txt
        run: sed -i  -e 's/\s*#.*$//'  -e '/^\s*$/d'  ./built-architectures.txt

      - name: Build base image
        run: docker build  --target builder  --tag midstate  --no-cache  .

      - name: Package :enable image
        run: docker build  --target enable  --tag "$APP:enable"  .

      - name: Package :comprehensive image
        run: docker build  --target comprehensive  --tag "$APP:comprehensive"  .

      - name: Package :<single-arch> images
        run: |
          for arch in $(cat built-architectures.txt); do
            echo "Building $APP:${arch}…"
            docker build  --target single  --tag "$APP:$arch"  --build-arg "ARCH=$arch"  .
          done

      - name: Show built image details
        run: docker images "$APP"

      - name: Save all images to .tgz files
        run: |
          mkdir -p images/
          for image in $(docker images "$APP" --format "{{.Tag}}"); do
            docker save "$APP:$image" | gzip > "images/$APP-$image.tgz"
          done

      - name: Print sha256sum of produced Docker images
        run: sha256sum images/*

      - name: Add Docker images as build artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: docker-images
          path: images/


  test:
    name: Test arch
    runs-on: ubuntu-18.04
    needs: build

    strategy:
      matrix:
        arch:
          - i386
          - arm
          - aarch64
          - riscv64
#          - riscv32 # Nothing to test it against…

    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v1.0.0
        with:
          name: docker-images

      - name: Print sha256sum of all Docker images
        run: sha256sum docker-images/*

      - name: Load relevant image locally
        run: docker load -i "docker-images/$APP-${{ matrix.arch }}.tgz"

      - name: Enable emulation
        run: docker run --rm --privileged "$APP:${{ matrix.arch }}" -p yes

      - name: Test riscv64 image
        if: matrix.arch == 'riscv64'
        run: docker run carlosedp/debian:sid-riscv64 uname -a

      - name: Test arm32v7 image
        if: matrix.arch == 'arm'
        run: docker run arm32v7/alpine uname -a

      - name: Test arch-specific image
        if: matrix.arch != 'riscv64' && matrix.arch != 'arm'
        run: docker run ${{ matrix.arch }}/alpine uname -a

name: Qemu perf on berkeleydb

env:
  APP: berkeleydb

on:
  push:
    branches: [ 'perf' ]
  schedule:
    - cron: '3 3 * * 3'

jobs:
  build:
    name: Build & measure time
    runs-on: ubuntu-18.04

    env:
      DOCKER_BUILDKIT: 1
      QEMU: meedamian/simple-qemu

    strategy:
      fail-fast: false
      matrix:
        qemu:
          - os
          - v3.1.1
          - v4.0.1
          - v4.1.1
          - v4.2.1
          - v5.0.0

        arch:
          - arm32v7
          - arm64v8

        include:
          - qemu: no-qemu

    steps:
      - uses: actions/checkout@v2
        with:
          repository: lncm/docker-berkeleydb
          fetch-depth: 1

      - name: Log start time
        run: touch /tmp/start


      - name: Install & register OS qemu
        if: matrix.qemu == 'os'
        run: |
          sudo apt-get update || true
          sudo apt-get install -y qemu-user-static

          qemu-arm-static     -version | head -n 1
          qemu-aarch64-static -version | head -n 1

          volume() { printf '%s:%s:ro' "/usr/bin/qemu-$1-static" "/usr/local/bin/qemu-$1-static" ;}

          docker run --rm \
            --privileged  \
            --volume "$(volume aarch64)" \
            --volume "$(volume arm)"     \
            meedamian/simple-qemu:enable \
              --reset \
              --persistent yes

      - name: Register self-compiled qemu
        if: matrix.qemu != 'os' && matrix.qemu != 'no-qemu'
        run: docker run --rm --privileged "$QEMU:${{ matrix.qemu }}-${{ matrix.arch }}" --reset  --persistent yes


      - name: Build container
        env:
          ARCH: ${{ matrix.arch }}
        run: docker build ${ARCH:+--build-arg="ARCH=$ARCH"}  .

      - name: Calculate execution time
        env:
          ARCH: ${{ matrix.arch }}
        run: |
          START=$(date -r /tmp/start +%s)
          NOW=$(date +%s)

          DIFF=$(( NOW - START ))

          SEC=1
          MIN=$(( 60 * SEC ))
          HOUR=$(( 60 * MIN ))
          DAY=$(( 24 * HOUR ))

          secs=$(( DIFF % 60 ))
          mins=$(( $(( DIFF / MIN )) % 60 ))
          hours=$(( $(( DIFF / HOUR )) % 24 ))
          days=$(( DIFF / DAY ))

          OUT=""
          if [[ "$days" -ne "0" ]]; then
            # Days-long jobs shouldn't happen, but 🤷🏻‍♂️
            OUT="${days}d "
          fi

          OUT="$OUT${hours}h:${mins}m:${secs}s"

          mkdir -p stat

          echo "$OUT" > "stat/${{ matrix.qemu }}-${ARCH:-$(uname -m)}"

      - name: Save execution time as an artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: stats
          path: stat/

  comment:
    name: Report result

    needs: build
    runs-on: ubuntu-18.04

    steps:
      - name: Download perf stats
        uses: actions/download-artifact@v1.0.0
        with:
          name: stats

      - name: Aggregate results
        run: |
          printf "Baseline: %s\n\n" "$(cat ./stats/no-qemu*)" > ./all-stats

          echo '| version | arm32v7 | arm64v8'  >> ./all-stats
          echo '|:-------:|--------:|--------:' >> ./all-stats

          for ver in $(ls ./stats/v* | awk -F/ '{print $NF}' | cut -d- -f1 | uniq); do
            line="| **${ver}**"

            line="$line | $(cat "./stats/$ver-arm32v7" | tr -d '\n')"
            line="$line | $(cat "./stats/$ver-arm64v8" | tr -d '\n')"

            echo "$line" >> ./all-stats
          done

          (cd stats; echo "| **default** | $(cat ./os-arm32v7) | $(cat ./os-arm64v8)") >> ./all-stats

          cat ./all-stats

          echo ::set-env name=RESULTS::"$(cat ./all-stats | sed -z 's/\n/\\n/g')"

#      - uses: actions/github-script@0.8.0
#        with:
#          github-token: ${{ secrets.GITHUB_TOKEN_NOEXPIRE }}
#          script: |
#            github.issues.createComment({
#              owner: 'lncm',
#              repo: 'docker-bitcoind',
#              issue_number: 9,
#              body: `Today's results:\n\n${process.env.RESULTS.replace(/\\n/g, '\n')}`
#            })
